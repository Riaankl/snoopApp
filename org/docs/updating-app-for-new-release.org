#+TITLE: Updating the App for a New Release


apisnoop.cncf.io displays the test results for the latest working release.  The working release is the one /after/ the current stable release.  So if the current stable release is ~1.19~, then apisnoop will show logs for ~1.20.0~ and earlier.

It does this by consuming ~json~ files for each release that it grabs from [[https://github.com/cncf/apisnoop/tree/master/resources/coverage][github.com/cncf/apisnoop's resources directory]].  This directory is continually updated by our ~snoopdb~ component.

When Kubernetes has a new release, the SnoopApp needs to be updated to display its test results.  Currently, this is done manually.  This should be done, **after** every Kubernetes release, and after our ~resources~ directory is appropriately updated.

** Updating apisnoop upon a new release.
Doublecheck [[https://github.com/cncf/apisnoop/tree/master/resources/coverage][cncf/apisnoop/resources/coverage]] to ensure the latest working release is in there.  If not, [[https://github.com/cncf/apisnoop/blob/master/docs/updating_apisnoop_upon_a_new_release.org][ensure snoopdb is updated for the new release too]].
Once the json is avaiable then:
- In this [[https://github.com/apisnoop/snoopApp/][SnoopApp repo]], you want to go to the file ~src/lib/constants.js~
- In this file, you will see a constant named ~RELEASES~.
- Add the next working release to the top of this list.

** Example
Let's say Kubernetes releases ~1.20.0~.  This makes ~1.20.0~ the /latest version/, and so ~1.21.0~ the /working version/.
You visit [[https://github.com/cncf/apisnoop/tree/master/resources/coverage][cncf/apisnoop/resources/coverage]] and see a file called ~1.21.0.json~.  You now know that new test data is available to consume.

With this confirmed, in this snoopApp repo you go to ~src/lib/constants.js~ where you see the constant RELEASES:

#+BEGIN_EXAMPLE javascript
export const RELEASES = [
  '1.20.0',
  '1.19.0',
  '1.18.0',
  '1.17.0',
  '1.16.0',
  '1.15.0'
];
#+END_EXAMPLE

We want to add '1.21.0' to the top.

It should now look like:

#+BEGIN_EXAMPLE javascript
export const RELEASES = [
  '1.21.0',
  '1.20.0',
  '1.19.0',
  '1.18.0',
  '1.17.0',
  '1.16.0',
  '1.15.0'
];
#+END_EXAMPLE

Push your changes, and the website will update automatically with the latest coverage.
